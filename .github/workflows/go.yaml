name: Go CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      DB_NAME: gostarter
      DB_USER: root
      DB_PASS: root
      LOCAL: true
      COVERAGE_THRESHOLD: 80 # Change as needed
      TZ: "Asia/Jakarta"
      PUBSUB_EMULATOR_HOST: localhost:8085

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go with cache
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.1"

      - name: Set up Linter and Run
        uses: golangci/golangci-lint-action@v6
        with:
          version: "v1.64.6"

      - name: Start MySQL, Postgres and Redis
        run: |
          if [ ! -f /usr/bin/redis-server ]; then 
            sudo apt-get update && sudo apt-get install -y redis-server 
          fi

          sudo systemctl start postgresql.service
          sudo systemctl start mysql.service
          sudo systemctl start redis-server.service

          sudo mysql --user="$DB_USER" --password="$DB_PASS" <<EOF
          CREATE DATABASE IF NOT EXISTS $DB_NAME;
          EOF
        continue-on-error: false

      - name: Run tests and validate coverage
        run: |
          make test

          # Check the coverage percentage
          COVERAGE=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          if (( $(echo "$COVERAGE < $COVERAGE_THRESHOLD" |bc -l) )); then
            echo "Coverage ($COVERAGE%) is below the threshold ($COVERAGE_THRESHOLD%)."
            exit 1
          fi

      - name: Create configuration file
        run: |
          mkdir -p ${{ github.workspace }}/config
          cat <<EOF > ${{ github.workspace }}/config/config.yaml
          server.address.http: :8081
          server.address.gql: :8082
          server.address.grpc: :50001

          telemetry.name: gostarter
          telemetry.otlp.grpc.address: localhost:4317
          telemetry.otlp.http.address: localhost:4318

          tz: "Asia/Jakarta"

          pubsub.project.id: pubsub-dev

          database.driver: mysql
          database.user: $DB_USER
          database.pass: $DB_PASS
          database.host: localhost
          database.port: 3306
          database.name: gostarter
          database.max.open: 10
          database.max.idle: 10
          database.max.lifetime: 5

          redis.addr: localhost:6379

          jwt.public.key: LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZ3d0RRWUpLb1pJaHZjTkFRRUJCUUFEU3dBd1NBSkJBS21LTDhvOFphdFBiSEwxUzRhcGkvTS9LRHI3VEtuK1owVkplVDRTS2xrdWN3NU8wR2JhUUhqWU02eUFNTy9tRDM1OHZkcEsrTWVEbDAyMEhMMGY1emtDQXdFQUFRPT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t
          jwt.private.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUJWUUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQVQ4d2dnRTdBZ0VBQWtFQXFZb3Z5anhscTA5c2N2VkxocW1MOHo4b092dE1xZjVuUlVsNVBoSXFXUzV6RGs3UVp0cEFlTmd6cklBdzcrWVBmbnk5MmtyNHg0T1hUYlFjdlIvbk9RSURBUUFCQWtBV1hLUGF0MlpXUWF3VmFrcnpjSmZhZ05rK3Y2MnkwRnVidFI5am5nUVlRMWtKNU96QlZlWGVEZzlrQ1NKblBRUUJ3NE5GaUxjL2xGc2pXRERuWlVNM0FpRUE2SU5IcWlkcjNjVFAxZUZQRzdIbFZ5Y2N4YzlqNWVLcDdLQXJVMW1PNVBzQ0lRQzZxbkRtd1MreG1GSGVTL3V5dkVaeWRLT2lUZ1Z3Mzl0alNMMFZ2K0htV3dJaEFJbWtEV3lBNGEzcXNFNGdqc0FLVTRXQU5kd3pwU09WUnBvNVJ1eVVlNjY1QWlBcW1xZzJJcld1QlNQNlpzRkY1Qzc0QktNc2NqNVBxdWc1MnVvOVFwUmVyUUloQUxVbTJjM29jVWNxSmZKQXIvOFUvSkRwV29IVjZRdExSYm9vd0JxSHZNTUgKLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQ==
          hash.sha256.secret: secret

          init.flag.messaging: false

          feature.flag.graphql.playground: true
          feature.flag.todo.job: false

          module.flag.auth: true
          module.flag.user: true
          module.flag.todo: true
          EOF

      - name: Build Binary and Run and Test HTTP
        run: |
          CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o server .

          ./server & # Run the app in the background
          APP_PID=$!

          # Ensure app is running
          if ! ps -p $APP_PID > /dev/null; then
            echo "App failed to start."
            exit 1
          fi

          curl --fail http://localhost:8082/graphql/playground || exit 1
