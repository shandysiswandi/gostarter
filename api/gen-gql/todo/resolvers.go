package todo

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.60

import (
	"context"
	"fmt"
)

// Create is the resolver for the create field.
func (r *mutationResolver) Create(ctx context.Context, in CreateInput) (string, error) {
	panic(fmt.Errorf("not implemented: Create - create"))
}

// Delete is the resolver for the delete field.
func (r *mutationResolver) Delete(ctx context.Context, id string) (string, error) {
	panic(fmt.Errorf("not implemented: Delete - delete"))
}

// UpdateStatus is the resolver for the updateStatus field.
func (r *mutationResolver) UpdateStatus(ctx context.Context, in UpdateStatusInput) (*UpdateStatusOutput, error) {
	panic(fmt.Errorf("not implemented: UpdateStatus - updateStatus"))
}

// Update is the resolver for the update field.
func (r *mutationResolver) Update(ctx context.Context, in UpdateInput) (*Todo, error) {
	panic(fmt.Errorf("not implemented: Update - update"))
}

// Fetch is the resolver for the fetch field.
func (r *queryResolver) Fetch(ctx context.Context, in *FetchInput) (*FetchOutput, error) {
	panic(fmt.Errorf("not implemented: Fetch - fetch"))
}

// Find is the resolver for the find field.
func (r *queryResolver) Find(ctx context.Context, id string) (*Todo, error) {
	panic(fmt.Errorf("not implemented: Find - find"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
