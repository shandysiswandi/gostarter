package todo

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"
)

// Create is the resolver for the create field.
func (r *mutationResolver) Create(ctx context.Context, in CreateInput) (*Todo, error) {
	panic(fmt.Errorf("not implemented: Create - create"))
}

// Delete is the resolver for the delete field.
func (r *mutationResolver) Delete(ctx context.Context, id string) (string, error) {
	panic(fmt.Errorf("not implemented: Delete - delete"))
}

// UpdateStatus is the resolver for the updateStatus field.
func (r *mutationResolver) UpdateStatus(ctx context.Context, id string, status Status) (*UpdateStatusResponse, error) {
	panic(fmt.Errorf("not implemented: UpdateStatus - updateStatus"))
}

// Update is the resolver for the update field.
func (r *mutationResolver) Update(ctx context.Context, id string, in UpdateInput) (*UpdateResponse, error) {
	panic(fmt.Errorf("not implemented: Update - update"))
}

// GetWithFilter is the resolver for the getWithFilter field.
func (r *queryResolver) GetWithFilter(ctx context.Context, in *FilterInput) ([]Todo, error) {
	panic(fmt.Errorf("not implemented: GetWithFilter - getWithFilter"))
}

// GetByID is the resolver for the getByID field.
func (r *queryResolver) GetByID(ctx context.Context, id string) (*Todo, error) {
	panic(fmt.Errorf("not implemented: GetByID - getByID"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
